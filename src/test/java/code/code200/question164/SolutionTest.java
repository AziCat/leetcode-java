package code.code200.question164;

import org.junit.Assert;
import org.junit.Test;

import static org.junit.Assert.*;

public class SolutionTest {
    @Test
    public void maximumGap() throws Exception {
        Solution solution = new Solution();
        Assert.assertEquals(8, solution.maximumGap(new int[]{9, 6, 1, 3, 17}));
    }

    @Test
    public void maximumGap1() throws Exception {
        Solution solution = new Solution();
        Assert.assertEquals(0, solution.maximumGap(new int[]{9, 9, 9, 9, 9}));
    }

    @Test
    public void maximumGap2() throws Exception {
        Solution solution = new Solution();
        Assert.assertEquals(0, solution.maximumGap(new int[]{9}));
    }

    @Test
    public void maximumGap3() throws Exception {
        Solution solution = new Solution();
        Assert.assertEquals(3, solution.maximumGap(new int[]{9, 6}));
    }

    @Test
    public void maximumGap4() throws Exception {
        Solution solution = new Solution();
        Assert.assertEquals(1, solution.maximumGap(new int[]{1, 2, 3, 4, 5, 6, 7, 8}));
    }

    @Test
    public void maximumGap5() throws Exception {
        Solution solution = new Solution();
        Assert.assertEquals(586, solution.maximumGap(new int[]{92,30851,24320,20449,7333,29396,10949,17319,9810,26639,20622,3359,14259,4050,21966,22269,24440,20895,2386,25837,628,12174,4901,29663,2720,18750,15281,29858,1891,2833,11814,21685,8976,23961,14880,18778,4529,26957,22660,20715,23811,17025,30634,24177,12737,4501,21186,25459,4645,2924,22640,11276,4525,19999,25786,16704,32283,30195,21028,17808,6591,32393,9753,32716,19192,17493,23693,2089,25849,14929,5857,19348,28105,10227,12807,22853,1421,860,2022,11926,21258,15314,24576,29974,6502,2160,21330,26329,23342,3868,10107,19731,11934,30650,25889,19685,10012,16287,11665,30327,30725,24905,5029,19015,13484,9293,31723,10433,20896,10640,18435,24591,19246,1978,20809,19506,5415,3048,30389,15698,14308,29346,16895,6226,16006,11532,26630,26024,23170,1632,10354,17004,24670,15771,20632,26542,437,26487,26015,15373,26753,11418,14817,9093,6042,14349,29076,393,13433,27119,15018,8530,7746,8811,15349,30838,30210,14567,32655,30652,31796,29566,23673,24111,26507,4785,9090,17009,6379,17753,4971,18002,20664,6368,22600,10401,18772,14769,6697,10563,23267,6125,24314,29569,3154,17504,17320,678,13719,6579,20614,13514,5946,1507,27886,32745,2836,2034,13867,32056,12887,13788,15766,16056,17614,24268,29184,8971,25958,7568,14416,7047,8174,28490,30573,6281,29723,8809,7007,4107,4559,12760,21425,21113,10906,24693,4377,8641,31874,10437,1627,16042,31231,21734,12394,24678,13130,21189,10704,19050,25815,6289,19793,29821,20256,11631,27595,30991,15269,10863,6497,15821,21297,18366,21976,2674,10590,18974,5185,480,8539,25748,26073,12655,4077,25184,19501,10885,16052,11570,30338,23143,13488,923,28275,5198,26628,29634,30684,446,15609,28248}));
    }

}